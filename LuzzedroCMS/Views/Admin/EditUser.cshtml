@model LuzzedroCMS.Models.UserViewModel
@using LuzzedroCMS.WebUI.Properties

@using (Html.BeginForm("EditUser", "Admin"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.User.UserID)
    <div class="form-horizontal">
        @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(x => x.User.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.User.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.User.Date, string.Empty, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.User.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.User.Email, string.Empty, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.User.Nick, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.User.Nick, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.User.Nick, string.Empty, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.User.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.User.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.User.Password, string.Empty, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.User.PhotoUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.User.PhotoUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.User.PhotoUrl, string.Empty, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label(Resources.MainPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="user-photo">
                    <img src="@Url.Content(Model.PhotoUrlPath)" class="img-circle pull-left" />
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.User.Status, Resources.Visibility, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="btn-group" data-toggle="buttons">
                    <label class="btn btn-default @((Model.User.Status)==1?"active":string.Empty)">@Html.RadioButtonFor(x => x.User.Status, 1, true) <span class="fa fa-eye"></span></label>
                    <label class="btn btn-default @((Model.User.Status)==0?"active":string.Empty)">@Html.RadioButtonFor(x => x.User.Status, 0, false) <span class="fa fa-eye-slash"></span></label>
                </div>
                @Html.ValidationMessageFor(x => x.User.Status, string.Empty, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Resources.Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}
