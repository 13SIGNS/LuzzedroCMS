@model LuzzedroCMS.Models.UserViewModel
@using LuzzedroCMS.WebUI.Properties
@using System.Web.Optimization

@section Script{
    @Scripts.Render("~/bundles/croppie")
    @Scripts.Render("~/bundles/forms")
    @Scripts.Render("~/bundles/editaccount")
}

@section Style{
    @Styles.Render("~/bundles/style/croppie")
}
@if (Model != null)
{
    <div class="form-horizontal">
        <div class="form-group">
            @Html.Label(Resources.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.Nick, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (string.IsNullOrEmpty(Model.User.Nick))
                {
                    @Resources.ToAddNickNameGoToArticle;
                }
                else
                {
                    @Html.DisplayFor(model => model.User.Nick, new { htmlAttributes = new { @class = "form-control" } });
                }
            </div>
        </div>
        <hr />
        @using (Html.BeginForm("EditPassword", "User"))
        {
            @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })
            @Html.HiddenFor(model => model.User.UserID)
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.Label(Resources.ChangePassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="form-group">
                        <div class="input-group">
                            @Html.PasswordFor(model => model.changePasswordViewModel.OldPassword, new { @class = "form-control  existing-password", placeholder = Resources.ExistingPassword })
                            <span class="input-group-btn">
                                <button class="btn btn-default ShowPasswordLS" data-target=".existing-password" type="button">@Resources.ShowPassword</button>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.changePasswordViewModel.OldPassword, string.Empty, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="input-group">
                            @Html.PasswordFor(model => model.changePasswordViewModel.NewPassword, new { @class = "form-control password", placeholder = Resources.NewPassword })
                            <span class="input-group-btn">
                                <button class="btn btn-default ShowPasswordLS" data-target=".password" type="button">@Resources.ShowPassword</button>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.changePasswordViewModel.NewPassword, string.Empty, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@Resources.Change" class="btn btn-success" />
                </div>
            </div>
        }
        <hr />
        @using (Html.BeginForm("EditPhoto", "User"))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.Label(Resources.MainPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="user-photo">
                        <img src="@Url.Content(Model.PhotoUrlPath)" class="img-circle pull-left" />
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.Label(Resources.ChooseImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="input-group">
                        <span class="input-group-btn">
                            <span class="btn btn-default btn-file">
                                @Resources.AddImage
                                @Html.TextBox("Image", string.Empty, new { type = "file", id = "upload", accept = "image/*" })
                            </span>
                        </span>
                        <input type="text" class="form-control" readonly=string.Empty>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.Label(Resources.FitPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 upload-image">
                    <div class="upload-msg">
                        @Resources.UploadFileToStartCropping
                    </div>
                    <div id="upload-image" class="croppie-container"></div>
                    @Html.Hidden("ImageCropped")
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@Resources.Save" class="btn btn-success upload-image-result" />
                </div>
            </div>
        }
    </div>
}